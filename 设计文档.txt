文档解析：
	<REC>:分割文档，创建map
	<Field>=text:可以通过正则表达式匹配分割出键值对
		有的数据并非只存在一行，所以在此处使用正则表达式，匹配条件
		并循环
		但是因为数据量过大，有时会引起go错误：index out of range
		所以将字符串拼接改为字符数组扩容，并将中间的变量使用可多变类型的
		interface{}
	将数据存入map
	最后将map上传至es服务器。

对于es的操作使用es在go中提供的官方库v7
相应操作的函数中，都是传送对应json的map结构
所以需要通过json结构定制相应的map结构
或者通过配置文件读取json，解析为map

本次实验使用Go语言环境，ES Kibana 7.6.2版本
在go中使用到的内容：
	正则表达式:regexp
	文件逐行并条件读取:os io bufio
	编码转换（提供的文档为GBK，需要转换UTF-8）
	字符串操作:strings
其他工具：
	Postman
	elasticsearch head（chrome插件）
	curl

在go语言中除了添加文档，还在主函数外定义了删改查、SQL语言查询操作等函数
可在main.go中进行自定义

问题:还不清出es的持久化策略的具体修改方法，在云服务器上进行本地测试过程中，
常常因为本地请求量太大，或者es缓存不够而导致服务停止，退而求其次在windows
上进行数据批量添加，速度放缓，添加成功率大大增加
	